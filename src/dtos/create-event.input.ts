import { Field, InputType } from '@nestjs/graphql'
import { Vec } from '@polkadot/types-codec'
import { Event as PolkadotEvent } from '@polkadot/types/interfaces'
import { v4 as uuidv4 } from 'uuid'
import { FrameSystemPhase } from '../interfaces'

@InputType()
export class CreateEventInput {
  @Field(() => String, { description: 'Event identifier generated by us' })
  id: string

  @Field(() => String, { description: 'Contract address from which the event was emitted' })
  contract: string

  @Field(() => String)
  index: string

  @Field(() => String)
  section: string

  @Field(() => String)
  method: string

  @Field(() => [String])
  topics: Vec<any>

  constructor(event: PolkadotEvent, phase: FrameSystemPhase, topics: Vec<any>) {
    const { section, method, data, index } = event
    const [account_id] = data
    this.id = uuidv4()
    this.contract = account_id.toString()
    this.index = index.toHex()
    this.section = section
    this.method = method
    this.topics = topics
  }
}
